[project.urls]
"Homepage" = "{{ cookiecutter.__gh_slug }}"
"Bug Tracker" = "{{ cookiecutter.__gh_slug }}/issues"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "{{ cookiecutter.package_slug }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.short_project_description }}"
authors = ["{{ cookiecutter.full_name }} <{{ cookiecutter.email }}>"]
readme = "README.md"
packages = [{include = "{{ cookiecutter.package_slug }}"}]

[tool.poetry.dependencies]
python = "^{{ cookiecutter.python_version }}"
packaging = "^23.1"
tbump = '*'
loguru = "*"


[tool.poetry.group.development.dependencies]
pre-commit = "*"
sourcery = '*'

[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-regressions ="*"

[tool.poetry.group.docs.dependencies]
sphinx = "*"
sphinx-autodoc-typehints = "*"
sphinx_rtd_theme = "*"
sphinx-click = "*"
sphinx_automodapi = "*"

[tool.tbump]
# Uncomment this if your project is hosted on GitHub:
github_url = "{{ cookiecutter.__gh_slug }}"

[tool.tbump.version]
current = "{{ cookiecutter.version }}"

# Example of a semver regexp.
# Make sure this matches current_version before using tbump
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  (
    (?P<extra>.+)
  )?
  '''


[[tool.tbump.field]]
# the name of the field
name = "extra"
# the default value to use, if there is no match
default = ""

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

# For each file to patch, add a [[tool.tbump.file]] config
# section containing the path of the file, relative to the
# tbump.toml location.

[[tool.tbump.file]]
src = "pyproject.toml"

[[tool.tbump.file]]
src = "./{{ cookiecutter.project_slug }}/__init__.py"

[[tool.tbump.file]]
src = "./docs/conf.py"

# You can specify a list of commands to
# run after the files have been patched
# and before the git commit is made

# Or run some commands after the git tag and the branch
# have been pushed:
# [[tool.tbump.after_push]]
# name = "build"
# cmd = "poetry build"
